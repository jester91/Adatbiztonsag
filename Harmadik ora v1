
package com.company;
import java.io.*;
import java.math.*;
import java.util.Scanner;
import java.util.*;
public class Main {

    public static void main(String[] args) {
        kibovitett(139, 14);
        modinvers(139, 14);

        Scanner sc = new Scanner(System.in);
        System.out.println("Ãœsd be az uzenetet ");
        String message = sc.next();
        System.out.println("Az uzenet :" + message);
        System.out.println("kodolt uzenet : "
                + encryptionMessage(message));
        System.out.println("dekodolt uzenet: "
                + decryptionMessage(encryptionMessage(message)));
        sc.close();

    }


    public static void encryptFile(String inputFile,String outputFile) throws IOException{
        InputStream inputStream=new FileInputStream(inputFile);
        Reader inputStreamReader= new InputStreamReader(inputStream);
        OutputStream outputStream= new FileOutputStream(outputFile);
        OutputStreamWriter outputStreamWriter=new OutputStreamWriter(outputStream);

        int data=inputStreamReader.read();

        while(data!=-1){
            Character theChar=(char) data;
            outputStreamWriter.write(decryptionMessage(theChar.toString()));

        }


    }

    public static void kibovitett(int a, int b) {
        int x0 = 1;
        int x1 = 0;
        int y0 = 0;
        int y1 = 1;
        int r, q, x, y;
        int s = 1;

        while (b != 0) {
            r = a % b;
            q = a / b;
            a = b;
            b = r;

            x = x1;
            y = y1;

            x1 = q * x1 + x0;
            y1 = q * y1 + y0;

            x0 = x;
            y0 = y;
            s = -s;


        }
        x = s * x0;
        y = s * (-y0);
        System.out.println(a + " " + x + " " + y);

    }

    public static void modinvers(int a, int m) {
        int m0 = m;
        int x = 1;
        int y = 0;
        int q, b;


        if (m == 1) {
            System.out.println(0);
            ;
        }
        while (a > 1) {
            q = a / m;
            b = m;
            m = a % m;
            a = b;
            b = y;
            y = x - q * y;
            x = b;


        }
        if (x < 0) {
            x += m0;
        }

        System.out.println(x);
    }

    public static String encryptionMessage(String Msg) {
        String CTxt = "";
        int a = 5;
        int b = 8;
        int x = 1, y = 1, q = 1;

        y = x - q * y;
        x = b;
        for (int i = 0; i < Msg.length(); i++) {
            CTxt = CTxt + (char) ((((a * Msg.charAt(i)) + b) % 26) + 65);
        }
        return CTxt;
    }
    public static String decryptionMessage(String CTxt){
        String Msg="";
        int a=5;
        int b=8;
        int a_inv=0;
        int flag=0;

        for(int i=0;i<26;i++)
        {
            flag=(a*i)%26;
            if(flag==1){
                a_inv=i;
                System.out.println(i);
            }
        }
        for (int i=0;i<CTxt.length();i++)
        {
            Msg=Msg+(char)(((a_inv*((CTxt.charAt(i)-b))%26))+65);
        }

        return Msg;
    }




}

